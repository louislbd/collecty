searchState.loadedDescShard("iron", 0, "The main crate for Iron.\nContains the error value\n<code>Error</code> is a trait representing the basic expectations for …\nA map of header fields on requests and responses.\nThe primary entrance point to <code>Iron</code>, a <code>struct</code> to …\nThe Result alias used throughout Iron and in clients of …\nA listening server, which can later be closed.\nContains the success value\nAn interface for plugins that cache values between calls.\nProtocol used to serve content.\nA trait providing the set and set_mut methods for all …\nA settings struct containing a set of timeouts which can …\nA map keyed by types.\nAppend a value to raw value of this header.\nRemove all entries from the map.\nRemove all headers from the map.\nWarning: This function doesn’t work. The server remains …\nCreate and evaluate a once-off instance of a plugin.\nCheck if a key has an associated value stored in the map.\nCreate a new, empty TypeMap.\nRead the underlying HashMap\nGet a mutable reference to the underlying HashMap\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some mutable reference to the inner value if it is …\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some reference to the inner value if it is of type …\nForwards to the method defined on the type <code>dyn Error</code>.\nGet the given key’s corresponding entry in the map for …\nIron’s error type and associated utilities.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn a copy of the plugin’s produced value.\nFind a value in the map and get a reference to it.\nGet a reference to the header field’s value, if it …\nReturn a mutable reference to the plugin’s produced …\nFind a value in the map and get a mutable reference to it.\nGet a mutable reference to the header field’s value, if …\nAccess the raw value of a header.\nReturn a reference to the plugin’s produced value.\nIron contains a <code>Handler</code>, which it uses to create responses …\nReturns a boolean of whether a certain header is in the …\nHeaders container, and common header fields.\nKick off the server process using the HTTP protocol.\nPlaintext HTTP/1\nKick off the server process using the HTTPS protocol.\nHTTP/1 over SSL/TLS\nUnwrap the given <code>Option</code> or return a <code>Ok(Response::new())</code> …\nInsert a value into the map with a specified key type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns <code>true</code> if the inner type is the same as <code>T</code>.\nReturn true if the map contains no values.\nReturns an iterator over the header fields.\nLike <code>try!()</code>, but wraps the error value in <code>IronError</code>. To be …\nControls the timeout for keep alive connections.\nGet the number of values stored in the map.\nReturns the number of headers in the map.\nKick off a server process on an arbitrary <code>Listener</code>.\nHTTP Methods\nThis module contains Iron’s middleware and handler …\nRe-exporting the mime crate, for convenience.\nRe-exports from the Modifier crate.\nThis module defines a series of convenience modifiers for …\nReturns the name used for this protocol in a URI’s …\nCreate a new, empty TypeMap.\nInstantiate a new instance of <code>Iron</code>.\nCreates a new, empty headers map.\nA module meant to be glob imported when using Iron.\nProvides type-based access to context intended for error …\nControls the timeout for reads on existing connections.\nRemove a value from the map.\nRemoves a header from the map, if one existed. Returns …\nRemove a header set by set_raw\nIron’s HTTP Request representation and associated …\nIron’s HTTP Response representation and associated …\nModify self using the provided modifier.\nSet a header field to the corresponding value.\nModify self through a mutable reference with the provided …\nSet the raw value of a header, bypassing any typed headers.\nThe socket addresses that the server is bound to.\nReturns the lower-level source of this error, if any.\nReturns an iterator starting with the current error and …\nStatus Codes\nThe number of request handling threads.\nServer timeouts.\nRe-exports from the <code>TypeMap</code> crate.\nRe-exports from the url crate.\nControls the timeout for writes on existing connections.\nContains the error value\n<code>Error</code> is a trait representing the basic expectations for …\nAn invalid <code>Header</code>.\nA set of errors that can occur parsing HTTP streams.\nResult type often returned from methods that can have …\nAn <code>io::Error</code> that occurred while trying to read or write …\nThe type of Errors inside and when using Iron.\nAn invalid <code>Method</code>, such as <code>GE,T</code>.\nContains the success value\nAn error from a SSL library.\nAn invalid <code>Status</code>, such as <code>1337 ELITE</code>.\nA message head is too large to be reasonable.\nAn invalid <code>RequestUri</code>, such as <code>exam ple.domain</code>.\nParsing a field as string failed\nAn invalid <code>HttpVersion</code>, such as <code>HTP/1.1</code>\nThe underlying error\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>IronError</code> from an error and a modifier.\nProvides type-based access to context intended for error …\nWhat to do about this error.\nReturns the lower-level source of this error, if any.\n<code>Accept</code> header, defined in RFC7231\n<code>Accept-Charset</code> header, defined in RFC7231\n<code>Accept-Encoding</code> header, defined in RFC7231\n<code>Accept-Language</code> header, defined in RFC7231\n<code>Accept-Ranges</code> header, defined in RFC7233\n<code>Access-Control-Allow-Credentials</code> header, part of CORS\n<code>Access-Control-Allow-Headers</code> header, part of CORS\n<code>Access-Control-Allow-Methods</code> header, part of CORS\nThe <code>Access-Control-Allow-Origin</code> response header, part of …\n<code>Access-Control-Expose-Headers</code> header, part of CORS\n<code>Access-Control-Max-Age</code> header, part of CORS\n<code>Access-Control-Request-Headers</code> header, part of CORS\n<code>Access-Control-Request-Method</code> header, part of CORS\nall.\nGet all bytes starting from x (“x-”)\n<code>Allow</code> header, defined in RFC7231\nalternate.\nAllow all origins\nAny value is a match\nAny value is a match\nAny value is a match\nappendix.\nAttachment implies that the recipient should prompt the …\naural.\n<code>Authorization</code> header, defined in RFC7235\nCredential holder for Basic Authentication\nToken holder for Bearer Authentication, most often seen …\nBig5\nbookmark.\nbraille.\nEach <code>Range::Bytes</code> header can contain one or more …\nIndicating byte-range requests are supported.\nByte range\nByte range\n<code>Cache-Control</code> header, defined in RFC7234\n<code>CacheControl</code> contains a list of these directives.\nchapter.\nA Mime charset.\nThe <code>chunked</code> encoding.\nThe <code>close</code> connection value.\nThe <code>compress</code> encoding.\n<code>Connection</code> header, defined in RFC7230\nValues in the Connection header that are supposed to be …\nValues that can be in the <code>Connection</code> header.\nA <code>Content-Disposition</code> header, (re)defined in RFC6266\n<code>Content-Encoding</code> header, defined in RFC7231\n<code>Content-Language</code> header, defined in RFC7231\n<code>Content-Length</code> header, defined in RFC7230\n<code>Content-Range</code> header, defined in RFC7233\nContent-Range, described in RFC7233\n<code>Content-Type</code> header, defined in RFC7231\ncontents.\nThe value <code>100-continue</code>.\n<code>Cookie</code> header, defined in RFC6265\ncopyright.\ncurrent.\n<code>Date</code> header, defined in RFC7231\nThe date when the client retrieved the resource\nThe <code>deflate</code> encoding.\ndescribedby.\nA parameter to the disposition type\nThe implied disposition of the content of the HTTP body\n<code>ETag</code> header, defined in RFC7232\nedit.\nedit-media.\nenclosure.\nA value to represent an encoding used in <code>Transfer-Encoding</code> …\nSome other encoding that is less common, can be any String.\nAn entity tag, defined in RFC7232\nThe entity-tag the client has of the resource\nEUC-JP\nEUC-KR\nThe <code>Expect</code> header.\n<code>Expires</code> header, defined in RFC7234\nExtension type.  Should be handled by recipients the same …\nExtension type consisting of token and value.  Recipients …\nEvery value other than <code>no-cache</code>.\nAn arbitrary charset specified as a string\next-rel-type.\nExtension directives. Optionally include an argument.\nExtension preferences. Always has a value, if none is …\nUnrecognized media descriptor extension.\nA Filename consisting of a Charset, an optional …\nfirst.\n<code>From</code> header, defined in RFC7231\nGet all bytes between x and y (“x-y”)\nGB2312\nglossary.\nThe <code>gzip</code> encoding.\n<code>h2c</code> value, HTTP/2 over cleartext TCP\nhandheld.\n“handling=leniant”\n“handling=strict”\nA trait for any object that will represent a header field …\nInternal implementation detail.\nA trait for any object that will represent a header field …\nA wrapper around any Header with a Display impl that calls …\nReturned with the <code>HeadersItems</code> iterator.\nA map of header fields on requests and responses.\nAn <code>Iterator</code> over the fields in a <code>Headers</code> map.\nhelp.\nThe <code>Host</code> header.\n<code>HTTP</code> value, Hypertext Transfer Protocol\nA <code>time::Time</code> with HTTP formatting and parsing\nhub.\nThe <code>identity</code> encoding.\n<code>If-Match</code> header, defined in RFC7232\n<code>If-Modified-Since</code> header, defined in RFC7232\n<code>If-None-Match</code> header, defined in RFC7232\n<code>If-Range</code> header, defined in RFC7233\n<code>If-Unmodified-Since</code> header, defined in RFC7232\nindex.\nInline implies default processing\nISO-2022-JP\nISO-2022-JP-2\nISO-2022-KR\nISO-8859-1\nISO-8859-10\nISO-8859-2\nISO-8859-3\nISO-8859-4\nISO-8859-5\nISO-8859-6\nISO-8859-6-E\nISO-8859-6-I\nISO-8859-7\nISO-8859-8\nISO-8859-8-E\nISO-8859-8-I\nISO-8859-9\nOnly the listed items are a match\nOnly the listed items are a match\nOnly the listed items are a match\nThe <code>keep-alive</code> connection value.\nKOI8-R\nGet last x bytes (“-x”)\nlast.\n<code>Last-Modified</code> header, defined in RFC7232\nlatest-version.\nlicense.\nThe <code>Link</code> header, defined in RFC5988\nA single <code>link-value</code> of a <code>Link</code> header, based on: RFC5988\n<code>Location</code> header, defined in RFC7231\n“max-age=delta”\n“max-stale=delta”\nA Media Descriptors Enum based on: …\n“min-fresh=delta”\n“must-revalidate”\nnext.\nnext-archive.\n“no-cache”\nCorresponds to the <code>no-cache</code> value.\n<code>no-referrer</code>\n<code>no-referrer-when-downgrade</code>\n“no-store”\n“no-transform”\nReserved as keyword, indicating no ranges are supported.\nA hidden origin\n“only-if-cached”\nThe <code>Origin</code> header.\n<code>origin</code>\n<code>origin-when-cross-origin</code>\npayment.\nThe <code>Pragma</code> header defined by HTTP/1.0.\npredecessor-version.\n<code>Prefer</code> header, defined in RFC7240\nPrefer contains a list of these preferences.\n<code>Preference-Applied</code> header, defined in RFC7240\nprev.\nprev-archive.\nprevious.\nprint.\n“private”\nprojection.\nProtocols that appear in the <code>Upgrade</code> header field\nA protocol name used to identify a spefic protocol. Names …\n“proxy-revalidate”\n“public”\nRepresents a quality used in quality values.\nRepresents an item with a quality value as defined in …\n<code>Range</code> header, defined in RFC7233\nRange Units, described in RFC7233\n<code>Referer</code> header, defined in RFC7231\n<code>Referrer-Policy</code> header, part of Referrer Policy\nrelated.\nA Link Relation Type Enum based on: RFC5988\nself.\nreplies.\n“respond-async”\n“return=minimal”\n“return=representation”\n“s-maxage=delta”\n<code>same-origin</code>\nAn Authorization scheme to be used in the header.\nscreen.\nsection.\n<code>Server</code> header, defined in RFC7231\nservice.\n<code>Set-Cookie</code> header, defined RFC6265\nShift_JIS\nstart.\n<code>strict-origin</code>\n<code>strict-origin-when-cross-origin</code>\n<code>StrictTransportSecurity</code> header, defined in RFC6797\nstylesheet.\nsubsection.\nsuccessor-version.\n<code>TLS</code> value, Transport Layer Security RFC2817\n<code>Transfer-Encoding</code> header, defined in RFC7230\ntty.\ntv.\nThe given range unit is not registered at IANA.\nCustom range, with unit not registered at IANA\nCustom range, with unit not registered at IANA (…\nAny other protocol name not known to hyper\n<code>unsafe-url</code>\nup.\n<code>Upgrade</code> header, defined in RFC7230\nUS ASCII\n<code>User-Agent</code> header, defined in RFC7231\nAllow one particular origin\n<code>Vary</code> header, defined in RFC7231\nversionHistory.\nvia.\n“wait=delta”\n<code>WebSocket</code> value, matched case insensitively,Web Socket …\nworking-copy.\nworking-copy-of.\nGet the <code>LinkValue</code>’s <code>anchor</code> parameter.\nGet the most common byte range header (“bytes=from-to”)\nGet byte range header with multiple subranges (“…\nA constructor to easily create a <code>Connection: close</code> header.\nThe disposition\nCreate an STS header that excludes subdomains\nFormat a header to be output into a TcpStream.\nFormat the Scheme data into a header value.\nA constructor  to easily create a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the name of the header field this belongs to.\nThe host, such as Host{hostname: “hyper.rs”…\nThe hostname, such a example.domain.\nGet the <code>LinkValue</code>’s <code>hreflang</code> parameter(s).\nA constructor  to easily create a …\nA constructor to easily create <code>Accept: image/*</code>.\nSignals the UA that the HSTS Policy applies to this HSTS …\nCreate an STS header that includes subdomains\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if a HeaderView is a certain Header.\nThe actual contents of the field.\nA constructor  to easily create a <code>Content-Type: image/jpeg</code> …\nA constructor to easily create <code>Accept: application/json</code>.\nA constructor  to easily create a …\nA constructor to easily create a <code>Connection: keep-alive</code> …\nGet the <code>LinkValue</code>’s value.\nSpecifies the number of seconds, after the reception of …\nGet the <code>LinkValue</code>’s <code>media</code> parameter(s).\nGet the <code>LinkValue</code>’s <code>type</code> parameter.\nGet the Header name as a slice.\nThe protocol identifier\nCreates a new <code>Origin</code> header.\nCreates a new Protocol with the given name and version\nCreate <code>Link</code> from a <code>Vec&lt;LinkValue&gt;</code>.\nCreate <code>LinkValue</code> from URI-Reference.\nConstructs a new EntityTag.\nCreates a new <code>QualityItem</code> from an item and a quality. The …\nDisposition parameters\nParse a header from a raw stream of bytes.\nUtility functions for Header implementations.\nThe password. <code>None</code> if the <code>:</code> delimiter character was not …\nA constructor  to easily create a …\nA constructor  to easily create a <code>Content-Type: image/png</code> …\nAn optional port number.\nAdd a <code>LanguageTag</code> to the <code>LinkValue</code>’s <code>hreflang</code> parameter.\nAdd a <code>MediaDesc</code> to the <code>LinkValue</code>’s <code>media_desc</code> parameter.\nAdd a <code>RelationType</code> to the <code>LinkValue</code>’s <code>rel</code> parameter.\nAdd a <code>RelationType</code> to the <code>LinkValue</code>’s <code>rev</code> parameter.\nAdd a <code>LinkValue</code> instance to the <code>Link</code> header’s values.\nConvenience function to create a <code>Quality</code> from a float.\nConvinience function to wrap a value in a <code>QualityItem</code> Sets …\nThe quality (client or server preference) for the value.\nGet the <code>LinkValue</code>’s <code>rel</code> parameter(s).\nGet the <code>LinkValue</code>’s <code>rev</code> parameter(s).\nAn optional Scheme name.\nThe scheme, such as http or https\nSet <code>LinkValue</code>’s <code>anchor</code> parameter.\nSet <code>LinkValue</code>’s <code>type</code> parameter.\nSet the tag.\nSet <code>LinkValue</code>’s <code>title</code> parameter.\nSet <code>LinkValue</code>’s <code>title*</code> parameter.\nA constructor to easily create <code>Accept: */*</code>.\nConstructs a new strong EntityTag.\nFor strong comparison two entity-tags are equivalent if …\nThe inverse of <code>EntityTag.strong_eq()</code>.\nGet the tag.\nA constructor to easily create <code>Accept: text/*</code>.\nGet the <code>LinkValue</code>’s <code>title</code> parameter.\nGet the <code>LinkValue</code>’s <code>title*</code> parameter.\nActual bearer token as a string\nThe username as a possibly empty string\nCast the value to a certain Header type.\nGet just the header value as a String.\nGet the <code>Link</code> header’s <code>LinkValue</code>s.\nThe optional version of the protocol, often in the format …\nConstructs a new weak EntityTag.\nWeakness indicator for the tag\nFor weak comparison two entity-tags are equivalent if their\nThe inverse of <code>EntityTag.weak_eq()</code>.\nTotal length of the instance, can be omitted if unknown\nFirst and last bytes of the range, omitted if request …\nother-range-resp\nother-range-unit\nAn extended header parameter value (i.e., tagged with a …\nThis encode set is used for HTTP header values and is …\nThe character set that is used to encode the <code>value</code> to a …\nFormat an array into a comma-delimited string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReads a comma-delimited raw header into a Vec.\nReads a single raw string when parsing a header.\nReads a raw string into a value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe human language details of the <code>value</code>, if available.\nParses extended header parameter values (<code>ext-value</code>), as …\nThe parameter value, as expressed in octets.\nCONNECT\nDELETE\nMethod extensions. An example would be …\nGET\nHEAD\nThe Request Method (VERB)\nOPTIONS\nPATCH\nPOST\nPUT\nTRACE\nReturns the argument unchanged.\nWhether a method is considered “idempotent”, meaning …\nCalls <code>U::from(self)</code>.\nWhether a method is considered “safe”, meaning the …\n<code>AfterMiddleware</code> are fired after a <code>Handler</code> is called inside …\n<code>AroundMiddleware</code> are used to wrap and replace the <code>Handler</code> …\n<code>BeforeMiddleware</code> are fired before a <code>Handler</code> is called …\nThe middleware chain used in Iron.\n<code>Handler</code>s are responsible for handling requests by creating …\nDo whatever post-processing this middleware should do.\nProduce a <code>Handler</code> from this <code>AroundMiddleware</code> given another …\nApply an <code>AroundMiddleware</code> to the <code>Handler</code> in this <code>Chain</code>.\nDo whatever work this middleware should do with a <code>Request</code> …\nRespond to an error thrown by a previous <code>BeforeMiddleware</code>.\nRespond to an error thrown by previous <code>AfterMiddleware</code>, …\nReturns the argument unchanged.\nProduce a <code>Response</code> from a Request, with the possibility of …\nCalls <code>U::from(self)</code>.\nLink both a before and after middleware to the chain at …\nLink a <code>AfterMiddleware</code> to the <code>Chain</code>, after all previously …\nApply an <code>AroundMiddleware</code> to the <code>Handler</code> in this <code>Chain</code>.\nLink a <code>BeforeMiddleware</code> to the <code>Chain</code>, after all previously …\nConstruct a new ChainBuilder from a <code>Handler</code>.\nMime, or Media Type. Encapsulates common registers types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEasily create a Mime without having to import so many …\nAllows use of the implemented type as an argument to …\nA trait providing the set and set_mut methods for all …\nModify <code>F</code> with self.\nModify self using the provided modifier.\nModify self through a mutable reference with the provided …\nA modifier for changing headers on requests and responses.\nA modifier for creating redirect responses.\nA modifier for creating redirect responses.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe body of an Iron request,\nA request bundles several parts of an incoming …\nThe <code>Request</code> given to all <code>Middleware</code>.\nHTTP/HTTPS URL type for Iron.\nThe request body as a reader.\nDeconstruct a Request into its constituent parts.\nGet a reference to the underlying <code>NetworkStream</code>.\nExtensible storage for data passed between middleware.\nThe URL fragment.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>Url</code> from a <code>rust-url</code> <code>Url</code>.\nCreate a request from an HttpRequest.\nThe request headers.\nThe headers of the incoming request.\nThe host field of the URL, probably a domain.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a <code>rust-url</code> <code>Url</code> from a <code>Url</code>.\nThe local address of the request.\nThe request method.\nThe <code>Method</code>, such as <code>Get</code>, <code>Post</code>, etc.\nCreate a new reader for use in an Iron request from a …\nCreate a new Request, reading the StartLine and Headers so …\nCreate a URL from a string.\nThe URL password field, from the userinfo section of the …\nThe URL path, the resource to be accessed.\nThe connection port.\nThe URL query string.\nThe originating address of the request.\nThe IP address of the remote connection.\nThe lower-cased scheme of the URL, typically “http” or …\nSet the read timeout of the underlying NetworkStream.\nGet a reference to the underlying Ssl stream, if connected …\nThe target request-uri for this request.\nThe requested URL.\nThe URL username field, from the userinfo section of the …\nThe version of the HTTP protocol used.\nThe version of HTTP for this request.\nWrapper type to set <code>Read</code>ers as response bodies\nThe outgoing half for a Tcp connection, created by a <code>Server</code>…\nThe response representation given to <code>Middleware</code>\nA trait which writes the body of an HTTP response.\nThe body of the response.\nConstruct a Response from its constituent parts.\nDeconstruct this Response into its constituent parts.\nFlushes all writing of a response to the client.\nA TypeMap to be used as an extensible storage for data …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe headers of this response.\nThe headers of the response.\nGet a mutable reference to the Headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a blank Response\nCreates a new Response that can be used to write to a …\nWrites the body and ends the response.\nConsume this Response, writing the Headers and Status and …\nThe status of this response.\nThe response status-code.\nGet a mutable reference to the status.\nThe HTTP version of this response.\nConstruct a Response with the specified modifier …\nWrites the body to the provided <code>Write</code>.\n202 Accepted [RFC7231, Section 6.3.3]\n208 Already Reported [RFC5842]\n502 Bad Gateway [RFC7231, Section 6.6.3]\n400 Bad Request [RFC7231, Section 6.5.1]\n4xx (Client Error): The request contains bad syntax or …\n409 Conflict [RFC7231, Section 6.5.8]\n100 Continue [RFC7231, Section 6.2.1]\n201 Created [RFC7231, Section 6.3.2]\n417 Expectation Failed [RFC7231, Section 6.5.14]\n424 Failed Dependency [RFC4918]\n403 Forbidden [RFC7231, Section 6.5.3]\n302 Found [RFC7231, Section 6.4.3]\n504 Gateway Timeout [RFC7231, Section 6.6.5]\n410 Gone [RFC7231, Section 6.5.9]\n505 HTTP Version Not Supported [RFC7231, Section 6.6.6]\n418 I’m a teapot [curiously, not registered by IANA, but …\n226 IM Used [RFC3229]\n1xx (Informational): The request was received, continuing …\n507 Insufficient Storage [RFC4918]\n500 Internal Server Error [RFC7231, Section 6.6.1]\n411 Length Required [RFC7231, Section 6.5.10]\n423 Locked [RFC4918]\n508 Loop Detected [RFC5842]\n405 Method Not Allowed [RFC7231, Section 6.5.5]\n421 Misdirected Request RFC7540, Section 9.1.2\n301 Moved Permanently [RFC7231, Section 6.4.2]\n207 Multi-Status [RFC4918]\n300 Multiple Choices [RFC7231, Section 6.4.1]\n511 Network Authentication Required [RFC6585]\nA status code lower than 100 or higher than 599. These …\n204 No Content [RFC7231, Section 6.3.5]\n203 Non-Authoritative Information [RFC7231, Section 6.3.4]\n406 Not Acceptable [RFC7231, Section 6.5.6]\n510 Not Extended [RFC2774]\n404 Not Found [RFC7231, Section 6.5.4]\n501 Not Implemented [RFC7231, Section 6.6.2]\n304 Not Modified [RFC7232, Section 4.1]\n200 OK [RFC7231, Section 6.3.1]\n206 Partial Content [RFC7233, Section 4.1]\n413 Payload Too Large [RFC7231, Section 6.5.11]\n402 Payment Required [RFC7231, Section 6.5.2]\n308 Permanent Redirect [RFC7238]\n412 Precondition Failed [RFC7232, Section 4.2]\n428 Precondition Required [RFC6585]\n102 Processing [RFC2518]\n407 Proxy Authentication Required [RFC7235, Section 3.2]\n416 Range Not Satisfiable [RFC7233, Section 4.4]\n3xx (Redirection): Further action needs to be taken in …\n431 Request Header Fields Too Large [RFC6585]\n408 Request Timeout [RFC7231, Section 6.5.7]\n205 Reset Content [RFC7231, Section 6.3.6]\n303 See Other [RFC7231, Section 6.4.4]\n5xx (Server Error): The server failed to fulfill an …\n503 Service Unavailable [RFC7231, Section 6.6.4]\nAn HTTP status code (<code>status-code</code> in RFC 7230 et al.).\nThe class of an HTTP <code>status-code</code>.\n2xx (Success): The request was successfully received, …\n101 Switching Protocols [RFC7231, Section 6.2.2]\n307 Temporary Redirect [RFC7231, Section 6.4.7]\n429 Too Many Requests [RFC6585]\n401 Unauthorized [RFC7235, Section 3.1]\n451 Unavailable For Legal Reasons [RFC7725]\n422 Unprocessable Entity [RFC4918]\nA status code not in the IANA HTTP status code registry or …\n415 Unsupported Media Type [RFC7231, Section 6.5.13]\n426 Upgrade Required [RFC7231, Section 6.5.15]\n414 URI Too Long [RFC7231, Section 6.5.12]\n305 Use Proxy [RFC7231, Section 6.4.5]\n506 Variant Also Negotiates [RFC2295]\nGet the standardised <code>reason-phrase</code> for this status code.\nDetermine the class of a status code, based on its first …\nGet the default status code for the class.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if class is ClientError.\nCheck if class is Informational.\nCheck if class is Redirection.\nCheck if class is ServerError.\nCheck if class is NoClass\nCheck if class is Success.\nThis trait defines the relationship between keys and …\nA map keyed by types.\nThe value type associated with this key type.\nA DNS domain name, as ‘.’ dot-separated labels. …\nThe host name of an URL.\nThis mostly exists because coherence rules don’t allow …\nAn IPv4 address. <code>Url::host_str</code> returns the serialization …\nAn IPv6 address. <code>Url::host_str</code> returns the serialization …\nA globally unique identifier\nOpaque identifier for URLs that have file or other schemes\nThe origin of an URL\nErrors that can occur during parsing.\nFull configuration for the URL parser.\nExposes methods to manipulate the path of an URL that is …\nIndicates a position within a URL based on its components.\nSocket addresses for an URL.\nNon-fatal syntax violations that can occur during parsing.\nConsists of the URL’s scheme, host and port\nA parsed URL record.\nImplementation detail of <code>Url::query_pairs_mut</code>. Typically …\nReturn the serialization of this URL.\n…\nChange the base URL\nReturn whether this URL is a cannot-be-a-base URL, meaning …\nRemove all segments in the path, leaving the minimal …\nDefine a new struct that implements the <code>EncodeSet</code> trait, …\nIf this URL has a host and it is a domain name (not an IP …\nAppend each segment from the given iterator at the end of …\nParser and serializer for the …\nReturn this URL’s fragment identifier, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a directory name as <code>std::path::Path</code> into an URL in …\nConvert a file name as <code>std::path::Path</code> into an URL in the …\nReturn whether the URL has an ‘authority’, which can …\nEquivalent to <code>url.host().is_some()</code>.\nReturn the parsed representation of the host for this URL. …\nReturn the string representation of the host (domain or IP …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the serialization of this URL.\nReturn whether this origin is a (scheme, host, port) tuple …\nParse a string as an URL, with this URL as the base URL.\nCall the provided function or closure on non-fatal parse …\nCreates a new opaque origin that is only equal to itself.\nReturn a default <code>ParseOptions</code> that can fully configure the …\nReturn the origin of this URL (…\nParse a host: either an IPv6 address in [] square …\nParse an absolute URL from a string.\nParse an URL string with the configuration so far.\nParse an absolute URL from a string and add params to its …\nReturn the password for this URL, if any, as a …\nReturn the path for this URL, as a percent-encoded ASCII …\nUnless this URL is cannot-be-a-base, return an iterator of …\nReturn an object with methods to manipulate this URL’s …\nRemove the last segment of this URL’s path.\nRemove the last segment of this URL’s path if it is …\nReturn the port number for this URL, if any.\nReturn the port number for this URL, or the default port …\nAppend the given segment at the end of this URL’s path.\nReturn this URL’s query string, if any, as a …\nParse the URL’s query string, if any, as …\nManipulate this URL’s query string, viewed as a sequence …\nReturn the scheme of this URL, lower-cased, as an ASCII …\nChange this URL’s fragment identifier.\nChange this URL’s host.\nChange this URL’s host to the given IP address.\nChange this URL’s password.\nChange this URL’s path.\nChange this URL’s port number.\nChange this URL’s query string.\nChange this URL’s scheme.\nChange this URL’s username.\nCall the provided function or closure for a non-fatal …\nAssuming the URL is in the <code>file</code> scheme or similar, convert …\nReturn a copy of <code>self</code> that owns an allocated <code>String</code> but …\nReturn a copy of <code>self</code> that owns an allocated <code>String</code> but …\n…\nReturn the username for this URL (typically the empty …\nIf the URL has a host, return something that implements …\nReturn value of <code>byte_serialize()</code>.\nThe return type of <code>parse()</code>.\nLike <code>Parse</code>, but yields pairs of <code>String</code> instead of pairs of …\nThe <code>application/x-www-form-urlencoded</code> serializer.\nSerialize and append a name/value pair.\nThe <code>application/x-www-form-urlencoded</code> byte serializer.\nRemove any existing name/value pair.\nSet the character encoding to be used for names and values …\nSerialize and append a number of name/value pairs.\nIf this serializer was constructed with a string, take and …\nCreate a new <code>application/x-www-form-urlencoded</code> serializer …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn a new iterator that yields pairs of <code>String</code> instead …\nCreate a new <code>application/x-www-form-urlencoded</code> serializer …\nConvert a byte string in the …\nThe domain to ASCII algorithm.\nThe domain to Unicode algorithm.\nPunycode (RFC 3492) implementation.\n<em>Unicode IDNA Compatibility Processing</em> (Unicode Technical …\nConvert Punycode to Unicode.\nConvert Punycode to an Unicode <code>String</code>.\nConvert Unicode to Punycode.\nConvert an Unicode <code>str</code> to Punycode.\nErrors recorded during UTS #46 processing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttp://www.unicode.org/reports/tr46/#ToASCII\nhttp://www.unicode.org/reports/tr46/#ToUnicode\nThis encode set is used for path components.\nRepresents a set of characters / bytes that should be …\nThis encode set is used for on ‘/’-separated path …\nThe return type of <code>percent_decode()</code>.\nThe return type of <code>percent_encode()</code> and …\nThis encode set is used in the URL parser for query …\nThis encode set is used for the path of cannot-be-a-base …\nThis encode set is used for username and password.\nCalled with UTF-8 bytes rather than code points. Should …\nDecode the result of percent-decoding as UTF-8.\nDecode the result of percent-decoding as UTF-8, lossily.\nDefine a new struct that implements the <code>EncodeSet</code> trait, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf the percent-decoding is different from the input, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPercent-decode the given bytes.\nPercent-encode the given bytes with the given encode set.\nReturn the percent-encoding of the given bytes.\nPercent-encode the UTF-8 encoding of the given string.")