searchState.loadedDescShard("embedded_nal_async", 0, "embedded-nal-async - An async Network Abstraction Layer …\nThis is the host address type to be returned by …\nEventual socket return type of the [<code>.connect()</code>] method\nThis trait is implemented by UDP sockets.\nType holding state of a TCP connection. Should close the …\nThis trait is an extension trait for <code>TcpStack</code> and <code>UdpStack</code> …\nResult is either a <code>A</code> record, or a <code>AAAA</code> record\nThe type returned when we have an error\nError type returned on connect failure.\nError type returned by send and receive operations.\nError type returned by send and receive operations.\nError type returned on socket creation failure.\nResult is <code>A</code> record\nResult is <code>AAAA</code> record\nEventual return type of the [<code>.bind_multiple()</code>] method\nThis trait is implemented by TCP/IP stacks. The trait …\nThis trait is implemented by UDP/IP stacks. The trait …\nThis trait is implemented by UDP sockets.\nEventual socket return type of the [<code>.bind_single()</code>] method\nCreate a socket that has no single fixed local address.\nCreate a socket that has a fixed local address.\nConnect to the given remote host and port.\nCreate a socket that has a fixed remote address.\nCreate a socket that has a fixed remote address.\nCreate a socket that has a fixed remote address.\nReturns the argument unchanged.\nResolve the hostname of a host, given its ip address.\nResolve the first ip address of a host, given its hostname …\nCalls <code>U::from(self)</code>.\nReceive a datagram into the provided buffer.\nReceive a datagram into the provided buffer.\nSend the provided data to the connected peer\nSend the provided data to a peer")