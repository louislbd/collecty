searchState.loadedDescShard("reqwless", 0, "HTTP client for embedded devices\nThe request is already sent\nThe provided buffer is too small\nAn error encoding or decoding data\nThe underlying connection was closed while being used\nAn error with DNS (it’s always DNS)\nErrors that can be returned by this library.\nAn invalid number of bytes were written to request body\nAn error parsing the URL\nAn error with the underlying network\nTls Error\nTrait for types that may optionally implement …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn async HTTP client that can establish a TCP connection …\nRepresents a HTTP connection that may be encrypted or …\nA HTTP request handle\nA HTTP resource describing a scoped endpoint\nNo verification of the remote host\nUse pre-shared keys for verifying\nType for TLS configuration of HTTP client.\nSupported verification modes.\nCreate a new scoped DELETE http request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new scoped GET http request.\nCreate a new scoped HEAD http request.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurn the request into a buffered request.\nTurn the request into a buffered request.\nTurn the resource into a buffered resource\nCreate a new HTTP client for a given connection handle and …\nCreate a new HTTP client for a given connection handle and …\nCreate a new scoped POST http request.\nCreate a new scoped PUT http request.\nCreate a single http request.\nCreate a connection to a server with the provided …\nSend a request on an established connection.\nSend the request.\nSend a request to a resource.\nSend the request.\nHTTP content types\nKeep-alive header\nTransfer encoding\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRequest authentication scheme.\nDELETE\nGET\nHEAD\nHTTP request methods\nPOST\nPUT\nA read only HTTP request type\nThe request body\nA HTTP request builder.\nstr representation of method\nSet the basic authentication header for the request.\nSet the data to send in the HTTP request body.\nReturn an immutable request.\nSet the content type header for the request.\nCreate a new DELETE http request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new GET http request.\nCreate a new HEAD http request.\nSet optional headers on the request.\nSet the host header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the length of the body if known\nCreate a new http request.\nSet the path of the HTTP request.\nCreate a new POST http request.\nCreate a new PUT http request.\nWrite the body to the provided writer\nWrite request header to the I/O stream\nA body reader\nType representing a parsed HTTP response.\nResponse body\nEnumeration of well-known HTTP status codes\nAn HTTP status code.\nAn error returned when trying to convert Status::Unknown …\nGet the response body\nThe buffer initially provided to read the header.\nThe content length.\nThe HTTP response content type.\nDiscard the entire body\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the response headers\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe keep-alive parameters.\nRead the entire body into the buffer originally provided …\nRead the entire body\nThe HTTP response status code.\nThe transfer encoding.")