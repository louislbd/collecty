searchState.loadedDescShard("lib", 0, "Crée un nouvel actif (asset) en traitant une requête …\nSupprime un actif (asset) de la base de données en …\nRécupère les actifs d’un utilisateur spécifié par …\nRécupère tous les actifs\nRécupère les actifs d’un utilisateur spécifique\nTélécharge une image dans le répertoire “uploads” …\nStructure des informations contenues dans le JWT\nReturns the argument unchanged.\nGénère un token JWT pour un utilisateur\nCalls <code>U::from(self)</code>.\nConnecter un utilisateur\nInscrire un nouvel utilisateur\nValide et décode un token JWT\nFonction pour établir une connexion à la base de …\nStructure représentant une réponse générique de …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCrée une nouvelle réponse avec un statut, un message et …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCette méthode extrait le token JWT de l’en-tête …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCrée et retourne un routeur qui regroupe toutes les …\nFonction qui définit et retourne les routes liées aux …\nFonction qui définit et retourne les routes liées aux …\nFonction pour annuler une offre en supprimant une entrée …\nFonction pour créer une nouvelle offre d’un utilisateur.\nFonction pour créer un NFT sur la blockchain XRPL.\nFonction pour créer une offre sur la blockchain XRPL.\nFonction pour récupérer toutes les offres présentes …\nFonction pour récupérer un seul token par son ID.\nFonction pour récupérer tous les tokens présents dans …\nFonction pour récupérer toutes les offres d’un …\nSupprime un utilisateur de la base de données.\nRécupère tous les utilisateurs de la base de données.\nMet à jour les informations d’un utilisateur (nom d’…\nCrée un nouveau portefeuille pour un utilisateur.\nVérifie la connexion au XRP Ledger.\nReturns the argument unchanged.\nRécupère les informations du dernier ledger validé.\nCalls <code>U::from(self)</code>.\nConfigure un compte de l’émetteur et récupère les …")